<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<proxy name="supportbee" startOnLoad="true" statistics="disable" trace="disable" transports="https,http"
       xmlns="http://ws.apache.org/ns/synapse">
    <target>
        <inSequence onError="faultHandlerSeq">
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="authToken" expression="json-eval($.authToken)"/>
            <property name="copiedEmails" expression="json-eval($.copiedEmails)"/>
            <property name="subject" expression="json-eval($.subject)"/>
            <property name="requesterName" expression="json-eval($.requesterName)"/>
            <property name="requesterEmail" expression="json-eval($.requesterEmail)"/>
            <property name="html" expression="json-eval($.html)"/>
            <property name="text" expression="json-eval($.text)"/>
            <property name="ticketId" expression="json-eval($.ticketId)"/>
            <property name="perPage" expression="json-eval($.perPage)"/>
            <property name="page" expression="json-eval($.page)"/>
            <property name="until" expression="json-eval($.until)"/>
            <property name="labelName" expression="json-eval($.labelName)"/>
            <property name="replyId" expression="json-eval($.replyId)"/>
            <property name="withInvited" expression="json-eval($.withInvited)"/>
            <property name="userId" expression="json-eval($.userId)"/>
            <supportbee.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <authToken>{$ctx:authToken}</authToken>
            </supportbee.init>
            <switch source="get-property('transport','Action')">
                <case regex="urn:createTicket">
                    <supportbee.createTicket>
                        <copiedEmails>{$ctx:copiedEmails}</copiedEmails>
                        <subject>{$ctx:subject}</subject>
                        <requesterName>{$ctx:requesterName}</requesterName>
                        <requesterEmail>{$ctx:requesterEmail}</requesterEmail>
                        <html>{$ctx:html}</html>
                        <text>{$ctx:text}</text>
                        <attachmentIds>{$ctx:attachmentIds}</attachmentIds>
                    </supportbee.createTicket>
                </case>
                <case regex="urn:getTicket">
                    <supportbee.getTicket>
                        <ticketId>{$ctx:ticketId}</ticketId>
                    </supportbee.getTicket>
                </case>
                <case regex="urn:listTickets">
                    <supportbee.listTickets>
                        <perPage>{$ctx:perPage}</perPage>
                        <page>{$ctx:page}</page>
                        <until>{$ctx:until}</until>
                    </supportbee.listTickets>
                </case>
                <case regex="urn:addLabel">
                    <supportbee.addLabel>
                        <ticketId>{$ctx:ticketId}</ticketId>
                        <labelName>{$ctx:labelName}</labelName>
                    </supportbee.addLabel>
                </case>
                <case regex="urn:removeLabel">
                    <supportbee.removeLabel>
                        <ticketId>{$ctx:ticketId}</ticketId>
                        <labelName>{$ctx:labelName}</labelName>
                    </supportbee.removeLabel>
                </case>
                <case regex="urn:listLabels">
                    <supportbee.listLabels/>
                </case>
                <case regex="urn:createReply">
                    <supportbee.createReply>
                        <ticketId>{$ctx:ticketId}</ticketId>
                        <html>{$ctx:html}</html>
                        <text>{$ctx:text}</text>
                    </supportbee.createReply>
                </case>
                <case regex="urn:getReply">
                    <supportbee.getReply>
                        <ticketId>{$ctx:ticketId}</ticketId>
                        <replyId>{$ctx:replyId}</replyId>
                    </supportbee.getReply>
                </case>
                <case regex="urn:listReplies">
                    <supportbee.listReplies>
                        <ticketId>{$ctx:ticketId}</ticketId>
                    </supportbee.listReplies>
                </case>
                <case regex="urn:listAgents">
                    <supportbee.listAgents>
                        <withInvited>{$ctx:withInvited}</withInvited>
                    </supportbee.listAgents>
                </case>
                <case regex="urn:getUser">
                    <supportbee.getUser>
                        <userId>{$ctx:userId}</userId>
                    </supportbee.getUser>
                </case>
                <case regex="urn:assignUser">
                    <supportbee.assignUser>
                        <ticketId>{$ctx:ticketId}</ticketId>
                        <userId>{$ctx:userId}</userId>
                    </supportbee.assignUser>
                </case>
                <case regex="urn:createComment">
                    <supportbee.createComment>
                        <ticketId>{$ctx:ticketId}</ticketId>
                        <html>{$ctx:html}</html>
                        <text>{$ctx:text}</text>
                    </supportbee.createComment>
                </case>
                <case regex="urn:listComments">
                    <supportbee.listComments>
                        <ticketId>{$ctx:ticketId}</ticketId>
                    </supportbee.listComments>
                </case>
                <case regex="urn:archiveTicket">
                    <supportbee.archiveTicket>
                        <ticketId>{$ctx:ticketId}</ticketId>
                    </supportbee.archiveTicket>
                </case>
                <case regex="urn:trashTicket">
                    <supportbee.trashTicket>
                        <ticketId>{$ctx:ticketId}</ticketId>
                    </supportbee.trashTicket>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>